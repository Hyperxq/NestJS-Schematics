import {Module} from '@nestjs/common';
import {DatabaseModule} from '@app/common';
import {MongooseModule} from '@nestjs/mongoose';
import {ConfigModule} from '@nestjs/config';
import Joi from 'joi';
import {<%= singular(classify(name)) %>Resolver} from './<%= singular(dasherize(name)) %>.resolver';
import {<%= singular(classify(name)) %>Service} from './<%= singular(dasherize(name)) %>.service';
import {<%= singular(classify(name)) %>} from './entities/<%= singular(dasherize(name)) %>.entity';
import {<%= singular(classify(name)) %>Schema} from './schemas/<%= singular(dasherize(name)) %>.schema';
import {<%= singular(classify(name)) %>Repository} from './<%= singular(dasherize(name)) %>.repository';

@Module({
providers: [<%= singular(classify(name)) %>Resolver, <%= singular(classify(name)) %>Service, <%= singular(classify(name)) %>Repository],
    imports: [
        ConfigModule.forRoot({
            isGlobal: true,
            validationSchema: Joi.object({
                MONGODB_URI: Joi.string().required(),
                MONGO_DATABASE: Joi.string().required(),
            }),
            envFilePath: './.env',
        }),
        DatabaseModule,
        MongooseModule.forFeature([
            {
                name: <%= singular(classify(name)) %>.name,
                schema: <%= singular(classify(name)) %>Schema,
                collection: '<%= camelize(plural(name)) %>',
            },
        ]),
    ],
})
export class <%= classify(name) %>Module {}
